name: PrCommand
description: "hi"
inputs:
  TOKEN:
    description: "..."
    required: true
runs:
  using: "composite"
  steps:
    - run: |
        if [[ "${{github.event.issue.pull_request && contains(github.event.comment.body, '!pr update-tests')}}" == "false" ]]; then
          echo false
          exit 0
        fi
      shell: bash

  # Put rocket on the comment to mark that it has started adding screenshots
    - uses: actions/github-script@v5
      with:
        github-token: ${{ inputs.TOKEN }}
        script: |
          github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'rocket'
          });
#    # https://github.com/actions/checkout/issues/331
    - uses: actions/github-script@v5
      id: get-pr
      with:
        script: |
          const request = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          }
          core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
          try {
            const result = await github.rest.pulls.get(request)
            console.log("got pr")
            return result.data
          } catch (err) {
            core.setFailed(`Request failed with error ${err}`)
          }
    - uses: actions/checkout@v2
      with:
        # Use the branch name from the PR step
        repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
        ref: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
        token: ${{ inputs.TOKEN }}

#    - name: write-token
#      env:
#        NPM_GITHUB_TOKEN: ${{ secrets.NPM_GITHUB_TOKEN }}
#      run: |
#        echo "@siteimprove:registry=https://npm.pkg.github.com" > .npmrc
#        echo "//npm.pkg.github.com/:_authToken=${NPM_GITHUB_TOKEN}" >> .npmrc
#
    - name: run stuff
      shell: bash
      run: ${{ inputs.COMMAND }}

    - name: commit
      shell: bash
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m ${{ inputs.COMMIT_MESSAGE }} || true
        git push
    # Put a hooray on the comment to mark that it has been updated
    - uses: actions/github-script@v5
      with:
        github-token: ${{ inputs.TOKEN }}
        script: |
          github.rest.reactions.createForIssueComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: context.payload.comment.id,
            content: 'hooray'
          });